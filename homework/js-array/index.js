import { shoppingList, listMethods } from './js/shoppingList.js';

// * Мінімум
/*Створи масив «Список покупок». Кожен елемент масиву є об'єктом, який містить назву продукту, кількість і куплений він чи ні, ціну за одиницю товару, сума. Написати кілька функцій для роботи з таким масивом:
1-  Виводити весь список на екран таким чином, щоб спочатку йшли продукти, що ще не придбані, а потім - ті, що вже придбали.
2-  Покупка продукту. Функція приймає назву продукту і відзначає його як придбаний.*/ 

// listMethods.unboughtSort();
// listMethods.buyItem();
// listMethods.unboughtSort();


// *Норма

/* 1 - Видалення продукту зі списку (видалення повинно проводитися шляхом створення нового масиву, в якому продукт, що ми шукаємо, буде відсутнім)
2 - Додавання покупки в список. Враховуй, що при додаванні покупки з уже існуючим в списку продуктом, 
необхідно збільшувати кількість в існуючій покупці, а не додавати нову. 
При цьому також повинна змінитися сума, наприклад, якщо ціна за одиницю 12, а кількості товарів стало 2, то сума буде 24.*/

listMethods.deleteItem();
// listMethods.addItem();
// listMethods.unboughtSort();

// *Максимум
/*1 - Підрахунок суми всіх продуктів (враховуючи кількість кожного) в списку.
2 - Підрахунок суми всіх (не) придбаних продуктів.
3 - Показання продуктів в залежності від суми, (від більшого до меншого / від меншого до більшого, в залежності від параметра функції, який вона приймає)*/

// listMethods.productSum(shoppingList);
// listMethods.situativeSum();
// listMethods.sumSort();

// localStorage.setItem('listMethods', JSON.stringify(listMethods));
// localStorage.setItem('shoppingList', JSON.stringify(shoppingList));
// console.log(JSON.parse(localStorage.getItem('shoppingList')));
